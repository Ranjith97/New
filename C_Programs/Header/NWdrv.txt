#include <linux/module.h>
#include <linux/netdevice.h>
#include <linux/kernel.h>
#include <linux/etherdevice.h>
struct net_device *virtualNIC;
int virtualNIC_open(struct net_device *dev)
netif_start_queue(dev);
int virtualNIC_release(struct net_device *dev)
netif_stop_queue(dev);
int virtualNIC_xmit(struct sk_buff *skb, struct net_device *dev)
dev_kfree_skb(skb);
int virtualNIC_init(struct net_device *dev)
const struct net_device_ops my_netdev_ops = {
     .ndo_init = virtualNIC_init,
     .ndo_open = virtualNIC_open,
     .ndo_stop = virtualNIC_release,
     .ndo_start_xmit = virtualNIC_xmit,
 };
static void virtual_setup(struct net_device *dev)
dev->netdev_ops = &my_netdev_ops;
int virtualNIC_init_module(void)
virtualNIC = alloc_netdev(0, "virtnC%d",0,virtual_setup);
register_netdev(virtualNIC);
void virtualNIC_cleanup (void)
unregister_netdev (virtualNIC);

